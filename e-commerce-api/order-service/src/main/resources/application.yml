spring:
  application:
    name: order-service

  datasource:
    url: jdbc:postgresql://postgres:5432/device_db
    username: root
    password: root
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: none
      database-platform: org.hibernate.dialect.PostgreSQLDialect
      show-sql: true
      naming:
          physical-strategy: com.ecommerce.orderservice.config.CamelCaseToUppercaseTablesNamingStrategy

  cloud:
    function:
      definition: orderResponse
    stream:
      kafka:
        binder:
          brokers: 'broker:29092'
      bindings:
        orderPlaced-out-0:
          destination: order-placed-topic
          contentType: application/json


eureka:
  instance:
    prefer-ip-address: true
    instance-id: order-service:${spring.application.instance_id:${random.value}}
  client:
    fetch-registry: true
    register-with-eureka: true
    region: default
    service-url:
      defaultZone: http://eureka-service:8761/eureka/
    registry-fetch-interval-seconds: 5

management:
  endpoints:
    web:
      exposure:
        include: info, health, shutdown
  endpoint:
    shutdown:
      enabled: true
  info:
    env:
      enabled: true

info:
  app:
    name: "order-service"
    description: "Rrder Service Application"
    version: "1.0.0"

server:
  port: 0