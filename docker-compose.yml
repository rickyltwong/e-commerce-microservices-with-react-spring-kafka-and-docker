version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: device_db
    ports:
      - "5432:5432"
    volumes:
      - ./seed.sql:/docker-entrypoint-initdb.d/seed.sql
    networks:
      - eam-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - eam-network

  minio:
    image: quay.io/minio/minio:latest
    container_name: minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ~/minio/data:/data
    command: server /data --console-address ":9001"
    networks:
      - eam-network

  kafka:
    image: apache/kafka:3.8.0
#    container_name: kafka
#    environment:
#      KAFKA_NODE_ID: 1
#      KAFKA_PROCESS_ROLES: broker,controller
#      KAFKA_LISTENERS: PLAINTEXT://localhost:9092,CONTROLLER://localhost:9093
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
#      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
#      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
#      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
#      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
#      KAFKA_NUM_PARTITIONS: 3
#      KAFKA_MESSAGE_MAX_BYTES: 2097152000
#      KAFKA_REPLICA_FETCH_MAX_BYTES: 2097152000
    ports:
      - '9092:9092'
#      - '9093:9093'
    networks:
      - eam-network

#  kafka-ui:
#    container_name: kafka-ui
#    image: provectuslabs/kafka-ui:latest
#    ports:
#      - "8090:8080"
#    environment:
#      DYNAMIC_CONFIG_ENABLED: 'true'
#    volumes:
#      - ~/kui/config.yml:/etc/kafkaui/dynamic_config.yaml
#    depends_on:
#      - kafka
#    networks:
#      - eam-network

  order-service:
#    build: ./e-commerce-api/order-service
    image: eam-project/order-service:1.0.0
    container_name: order-service
#    environment:
#       - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-service:8761/eureka
#       - EUREKA_INSTANCE_PREFERIPADDRESS=true
#       - KAFKA_BROKER=kafka:9092
#       - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    ports:
      - '8081:8080'
    depends_on:
      - postgres
#      - eureka-service
      - kafka
    networks:
      - eam-network

  # product-service:
  #   build: ./e-commerce-api/produce-service
  #   container_name: product-service
  #   environment:
  #     - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-service:8761/eureka
  #     - EUREKA_INSTANCE_PREFERIPADDRESS=true
  #     - KAFKA_BROKER=kafka:9092
  #   depends_on:
  #     - postgres
  #     - eureka-service
  #     - kafka
  #   networks:
  #     - eam-network

  # admin-service:
  #   build: ./e-commerce-api/admin-service
  #   container_name: admin-service
  #   environment:
  #     - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-service:8761/eureka
  #     - EUREKA_INSTANCE_PREFERIPADDRESS=true
  #     - KAFKA_BROKER=kafka:9092
  #   depends_on:
  #     - postgres
  #     - eureka-service
  #     - kafka
  #   networks:
  #     - eam-network

  # image-service:
  #   build: ./e-commerce-api/image-service
  #   container_name: image-service
  #   volumes:
  #     - ./assets:/app/images
  #   environment:
  #     - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-service:8761/eureka
  #     - EUREKA_INSTANCE_PREFERIPADDRESS=true
  #     - KAFKA_BROKER=kafka:9092
  #   depends_on:
  #     - postgres
  #     - eureka-service
  #     - kafka
  #   networks:
  #     - eam-network

  # gateway-service:
  #   build: ./e-commerce-api/gateway-service
  #   container_name: gateway-service
  #   ports:
  #     - '8080:8080'
  #   environment:
  #     - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-service:8761/eureka
  #     - EUREKA_INSTANCE_PREFERIPADDRESS=true
  #   depends_on:
  #     - order-service
  #     - product-service
  #     - admin-service
  #     - image-service
  #   networks:
  #     - eam-network

  # eureka-service:
  #   build: ./e-commerce-api/eureka-service
  #   container_name: eureka-service
  #   ports:
  #     - '8761:8761'
  #   networks:
  #     - eam-network

#  frontend:
#    build: ./frontend
#    container_name: frontend
#    ports:
#      - '3000:80'
#    depends_on:
#      - gateway-service
#    networks:
#      - eam-network

networks:
  eam-network:
    driver: bridge

volumes:
  minio-data:
