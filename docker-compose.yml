version: '3'

services:
  postgres:
    image: postgres:latest
    hostname: postgres
    container_name: postgres
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: device_db
    ports:
      - "5432:5432"
    volumes:
      - ./seed.sql:/docker-entrypoint-initdb.d/seed.sql
    networks:
      eam-network:
        aliases:
          - postgres

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - eam-network

  minio:
    image: quay.io/minio/minio:latest
    container_name: minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ~/minio/data:/data
    command: server /data --console-address ":9001"
    networks:
      - eam-network

  broker:
    image: confluentinc/confluent-local:7.4.1
    hostname: broker
    container_name: broker
    ports:
      - "8082:8082"
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9092'
    networks:
      eam-network:
        aliases:
          - broker

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - '9999:8080'
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      KAFKA_CLUSTERS_0_NAME: 'local'
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'broker:29092'
    networks:
      eam-network:
        aliases:
          - kafka-ui

  order-service:
    image: eam-project/order-service:1.0.0
    container_name: order-service
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-service:8761/eureka
      - EUREKA_INSTANCE_PREFERIPADDRESS=true
    # ports:
    #   - '8081:8080'
    depends_on:
      - postgres
      - eureka-service
      - broker
      - kafka-ui
    networks:
      eam-network:
        aliases:
          - order-service

  product-service:
    image: eam-project/product-service:1.0.0
    hostname: product-service
    container_name: product-service
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-service:8761/eureka
      - EUREKA_INSTANCE_PREFERIPADDRESS=true
    #   - KAFKA_BROKER=kafka:9092
    depends_on:
      - postgres
      - eureka-service
      - broker
      - kafka-ui
    networks:
      eam-network:
        aliases:
          - product-service

  admin-service:
    image: eam-project/admin-service:1.0.0
    container_name: admin-service
    hostname: admin-service
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-service:8761/eureka
      - EUREKA_INSTANCE_PREFERIPADDRESS=true
    depends_on:
      - eureka-service
      - order-service
      - product-service
    networks:
      eam-network:
        aliases:
          - admin-service

  image-service:
    image: eam-project/image-service:1.0.0
    hostname: image-service
    container_name: image-service
    volumes:
      - ./assets:/app/images
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-service:8761/eureka
      - EUREKA_INSTANCE_PREFERIPADDRESS=true
    #   - KAFKA_BROKER=kafka:9092
    depends_on:
      - postgres
      - eureka-service
      - broker
    networks:
      eam-network:
        aliases:
          - image-service

  gateway-service:
    image: eam-project/gateway-service:1.0.0
    container_name: gateway-service
    hostname: gateway-service
    ports:
      - '8080:8080'
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-service:8761/eureka
      - EUREKA_INSTANCE_PREFERIPADDRESS=true
    depends_on:
      - order-service
      - product-service
      # - admin-service
      - image-service
    networks:
      eam-network:
        aliases:
          - gateway-service

  eureka-service:
    image: eam-project/eureka-service:1.0.0
    hostname: eureka-service
    container_name: eureka-service
    ports:
      - '8761:8761'
    networks:
      eam-network:
        aliases:
          - eureka-service

#  frontend:
#    build: ./frontend
#    container_name: frontend
#    ports:
#      - '3000:80'
#    depends_on:
#      - gateway-service
#    networks:
#      - eam-network

networks:
  eam-network:
    driver: bridge

volumes:
  minio-data: