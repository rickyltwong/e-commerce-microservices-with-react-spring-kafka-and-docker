version: '3.8'

services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: device_db
    ports:
      - '5432:5432'
    volumes:
      - ./seed.sql:/docker-entrypoint-initdb.d/seed.sql
    networks:
      - eam-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - '5050:80'
    depends_on:
      - postgres
    networks:
      - eam-network

  # order-service:
  #   build: ./backend/OrderService
  #   container_name: order-service
  #   environment:
  #     - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-service:8761/eureka
  #     - EUREKA_INSTANCE_PREFERIPADDRESS=true
  #     - KAFKA_BROKER=kafka:9092
  #   depends_on:
  #     - postgres
  #     - eureka-service
  #     - kafka
  #   networks:
  #     - eam-network

  # product-service:
  #   build: ./backend/ProductService
  #   container_name: product-service
  #   environment:
  #     - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-service:8761/eureka
  #     - EUREKA_INSTANCE_PREFERIPADDRESS=true
  #     - KAFKA_BROKER=kafka:9092
  #   depends_on:
  #     - postgres
  #     - eureka-service
  #     - kafka
  #   networks:
  #     - eam-network

  # admin-service:
  #   build: ./backend/AdminService
  #   container_name: admin-service
  #   environment:
  #     - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-service:8761/eureka
  #     - EUREKA_INSTANCE_PREFERIPADDRESS=true
  #     - KAFKA_BROKER=kafka:9092
  #   depends_on:
  #     - postgres
  #     - eureka-service
  #     - kafka
  #   networks:
  #     - eam-network

  # image-service:
  #   build: ./backend/ImageService
  #   container_name: image-service
  #   volumes:
  #     - ./assets:/app/images
  #   environment:
  #     - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-service:8761/eureka
  #     - EUREKA_INSTANCE_PREFERIPADDRESS=true
  #     - KAFKA_BROKER=kafka:9092
  #   depends_on:
  #     - postgres
  #     - eureka-service
  #     - kafka
  #   networks:
  #     - eam-network

  # gateway-service:
  #   build: ./backend/GatewayService
  #   container_name: gateway-service
  #   ports:
  #     - '8080:8080'
  #   environment:
  #     - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-service:8761/eureka
  #     - EUREKA_INSTANCE_PREFERIPADDRESS=true
  #   depends_on:
  #     - order-service
  #     - product-service
  #     - admin-service
  #     - image-service
  #   networks:
  #     - eam-network

  # eureka-service:
  #   build: ./backend/EurekaService
  #   container_name: eureka-service
  #   ports:
  #     - '8761:8761'
  #   networks:
  #     - eam-network

  # kafka:
  #   image: wurstmeister/kafka:2.12-2.2.1
  #   container_name: kafka
  #   ports:
  #     - '9092:9092'
  #   environment:
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #   depends_on:
  #     - zookeeper
  #   networks:
  #     - eam-network

  # zookeeper:
  #   image: wurstmeister/zookeeper:3.4.6
  #   container_name: zookeeper
  #   ports:
  #     - '2181:2181'
  #   networks:
  #     - eam-network

  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - '3000:80'
    depends_on:
      - gateway-service
    networks:
      - eam-network

networks:
  eam-network:
    driver: bridge
